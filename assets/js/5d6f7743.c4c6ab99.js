"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[558],{58417:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new SearchTreeRoot.","params":[{"name":"Name","desc":"The name of the node.","lua_type":"string"}],"returns":[{"desc":"The node that was created.","lua_type":"SearchTreeRoot"}],"function_type":"static","source":{"line":26,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}},{"name":"GetTags","desc":"Gets the tags involved in the tree.","params":[{"name":"self","desc":"The root of the tree we\'re getting the tags from.","lua_type":"SearchTreeRoot"}],"returns":[{"desc":"A dictionary containing all of the involved tags.","lua_type":"{[string]: true?}"}],"function_type":"static","source":{"line":36,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}},{"name":"AddToTag","desc":"Adds an item to a tag. If the item was never added before, track it within the root, too.","params":[{"name":"self","desc":"The root of the tree we\'re adding the item to.","lua_type":"SearchTreeRoot"},{"name":"item","desc":"The item we want to add.","lua_type":"any"},{"name":"TagName","desc":"The tag that the item belongs to.","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":65,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}},{"name":"RemoveFromTag","desc":"Removes an item from a tag.","params":[{"name":"self","desc":"The root of the tree we\'re removing the item from.","lua_type":"SearchTreeRoot"},{"name":"item","desc":"The item we want to remove.","lua_type":"any"},{"name":"TagName","desc":"The tag that the item had.","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":108,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}},{"name":"GetByTag","desc":"Gets items a tag.","params":[{"name":"self","desc":"The root of the tree we\'re getting items from.","lua_type":"SearchTreeRoot"},{"name":"TagName","desc":"The tag that we want the items to have.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"{[number]: T}\\r\\n"}],"function_type":"static","source":{"line":128,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}},{"name":"GetAll","desc":"Gets items all items within the tree.","params":[{"name":"self","desc":"The root of the tree we\'re getting items from.","lua_type":"SearchTreeRoot"}],"returns":[{"desc":"","lua_type":"{[number]: T}\\r\\n"}],"function_type":"static","source":{"line":143,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}},{"name":"PremapSearch","desc":"Updates the tree to ensure there\'s no empty nodes.","params":[{"name":"self","desc":"The root of the tree we\'re premapping.","lua_type":"SearchTreeRoot"},{"name":"TagNames","desc":"The tags that we want the tree to have.","lua_type":"{string}"}],"returns":[],"function_type":"static","source":{"line":261,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}},{"name":"GetByTags","desc":"Gets items a set of tags.","params":[{"name":"self","desc":"The root of the tree we\'re getting items from.","lua_type":"SearchTreeRoot"},{"name":"TagNames","desc":"The tags that we want the items to have.","lua_type":"{string}"}],"returns":[{"desc":"","lua_type":"{[number]: T}\\r\\n"}],"function_type":"static","source":{"line":295,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}},{"name":"CleanUp","desc":"Cleans up the root\'s data.","params":[{"name":"self","desc":"","lua_type":"SearchTreeRoot<T>"}],"returns":[],"function_type":"static","source":{"line":308,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}}],"properties":[],"types":[{"name":"SearchTreeRoot","desc":"The node that represents the foundational/primary part of the search tree.","lua_type":"Node","source":{"line":19,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}}],"name":"SearchTreeLib","desc":"The library to establish a node-tree optimized for multi-tagged indexing.","source":{"line":5,"path":"src/Script/StardustFramework/Libraries/SearchTree/init.lua"}}')}}]);