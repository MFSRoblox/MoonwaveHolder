"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[994],{66629:e=>{e.exports=JSON.parse('{"functions":[],"properties":[],"types":[{"name":"PackageToAssetConverter","desc":"","fields":[{"name":"CheckPackage","lua_type":"(newPackage: Package) -> (boolean, string?)","desc":"Used to verify that an inputted package qualifies for usage within the environment."},{"name":"ToAsset","lua_type":"(newPackage: Package) -> ({Asset})","desc":"Used to get the assets from the package, alongside add categories and other data for each asset."}],"source":{"line":13,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/PackageToAssetConverter/init.lua"}},{"name":"DownloadConfig","desc":"","fields":[{"name":"AssetID","lua_type":"number","desc":"The assetID of the packge being downloaded."},{"name":"ConverterType","lua_type":"string","desc":"The name of the [PackageToAssetConverter](PackageToAssetConverter#PackageToAssetConverter) that the package will verified and intialized by."}],"source":{"line":24,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/PackageToAssetConverter/init.lua"}}],"name":"PackageToAssetConverter","desc":"A general interface that contains logic on how to verify and initialize a [package](Package) into [assets](Asset).","source":{"line":5,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/PackageToAssetConverter/init.lua"}}')}}]);