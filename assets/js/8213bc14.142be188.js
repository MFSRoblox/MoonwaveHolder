"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[290],{74789:e=>{e.exports=JSON.parse('{"functions":[{"name":"setup","desc":"Sets up the inputted Asset for use in this Lib by creating a [AssetMetadata] object linked to the input.","params":[{"name":"newAsset","desc":"The instance being wrapped.","lua_type":"Asset"},{"name":"parentPackage","desc":"The package of which the asset originated from.","lua_type":"Package"}],"returns":[],"function_type":"static","tags":["constructor"],"source":{"line":31,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"SetParentPackage","desc":"Sets the ParentPackage to the inputted Package.","params":[{"name":"asset","desc":"","lua_type":"Asset"},{"name":"parentPackage","desc":"","lua_type":"PackageLibTypes.Package"}],"returns":[],"function_type":"static","tags":["utility"],"source":{"line":46,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"GetCategories","desc":"Adds a category to the Asset and logs it into AssetService.","params":[{"name":"asset","desc":"","lua_type":"Asset"}],"returns":[],"function_type":"static","tags":["utility"],"source":{"line":64,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"AddCategory","desc":"Adds a category to the Asset and logs it into AssetService.","params":[{"name":"asset","desc":"","lua_type":"Asset"},{"name":"Category","desc":"","lua_type":"string"}],"returns":[],"function_type":"static","tags":["utility"],"source":{"line":78,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"RemoveCategory","desc":"Removes a category to the Asset and logs it into AssetService.","params":[{"name":"asset","desc":"","lua_type":"Asset"},{"name":"Category","desc":"","lua_type":"string"}],"returns":[],"function_type":"static","tags":["utility"],"source":{"line":95,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"SetToInfo","desc":"Overrides the default ToInfo function.","params":[{"name":"asset","desc":"","lua_type":"Asset"},{"name":"ToInfo","desc":"","lua_type":"(asset: Asset, Player: Player) -> ({[string]: any})"}],"returns":[],"function_type":"static","tags":["utility"],"source":{"line":107,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"HasPermission","desc":"","params":[{"name":"asset","desc":"","lua_type":"Asset"},{"name":"_Player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"static","tags":["utility"],"source":{"line":115,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"GetInfo","desc":"","params":[{"name":"asset","desc":"","lua_type":"Asset"},{"name":"Player","desc":"","lua_type":"Player"}],"returns":[{"desc":"","lua_type":"{[string]: any}\\r\\n"}],"function_type":"static","tags":["utility"],"source":{"line":123,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"HasCategory","desc":"Checks if the Asset is part of the inputted Category,","params":[{"name":"asset","desc":"","lua_type":"Asset"},{"name":"Category","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","tags":["utility"],"source":{"line":133,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"HasCategories","desc":"Checks if the Asset is part of the inputted Categories.","params":[{"name":"asset","desc":"","lua_type":"Asset"},{"name":"Categories","desc":"","lua_type":"{string}"}],"returns":[{"desc":"","lua_type":"boolean\\r\\n"}],"function_type":"static","tags":["utility"],"source":{"line":145,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}}],"properties":[],"types":[{"name":"Asset","desc":"An [Instance] that\'ll eventually be used within the game. Originates from [Packages](PackageLib#ToAsset).\\n\\nAssets don\'t have a specific format, as it could be literally anything.\\nBut it is important to mark them so they could be updated later.\\nThis will happen when a new update was found for asset\'s parent package.","lua_type":"Instance","source":{"line":15,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}},{"name":"AssetMetadata","desc":"Unique data that is used to determine the logic within [Asset].","fields":[{"name":"ParentPackage","lua_type":"ObjectValue","desc":"Stores the Package Instance of which the asset originates from."},{"name":"Counts","lua_type":"Folder","desc":"Stores various counts in its attributes."},{"name":"Categories","lua_type":"Folder","desc":"Stores the categories of which the asset belongs to in its attributes."},{"name":"CategoryAdded","lua_type":"BindableEvent","desc":"Fired when a new category is added."},{"name":"CategoryRemoved","lua_type":"BindableEvent","desc":"Fired when a category is removed."},{"name":"ToInfo","lua_type":"BindableFunction","desc":"Contains the function that returns read-only data of the asset."}],"source":{"line":13,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/Metadata.lua"}}],"name":"AssetLib","desc":"A Wrapper used to manage Assets.","tags":["Wrapper"],"source":{"line":6,"path":"src/Script/StardustFramework/Libraries/AssetImporter/Package/Asset/init.lua"}}')}}]);