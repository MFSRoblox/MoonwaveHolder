"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[742],{45852:e=>{e.exports=JSON.parse('{"functions":[{"name":"toString","desc":"Returns node information as a string from the passed in Node.","params":[{"name":"self","desc":"The node to get information from.","lua_type":"NodeInstance"}],"returns":[{"desc":"A string with the node\'s contents, name, tags, parents, and children.","lua_type":"string"}],"function_type":"static","source":{"line":11,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"new","desc":"Creates a new [NodeInstance].","params":[{"name":"DisplayName","desc":"The name that will appear for the node when [NodeLib.toString] is used on it.","lua_type":"string"},{"name":"Parent","desc":"The node instance that would be the parent of this new node. If \\"false\\" is inputted, then the node is considered a \\"root.\\"","lua_type":"NodeInstance | false"},{"name":"LinkDesc","desc":"The relationship between the Parent and this new node.","lua_type":"string"}],"returns":[{"desc":"The node that was created.","lua_type":"NodeInstance"}],"function_type":"static","source":{"line":184,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"AddTag","desc":"Adds a tag to the node. Created to assign \\"categories\\".","params":[{"name":"self","desc":"The node that the tag will be added to.","lua_type":"NodeInstance"},{"name":"TagName","desc":"The tag being added","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":207,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"RemoveTag","desc":"Removes a tag from the node. Created to remove \\"categories\\".","params":[{"name":"self","desc":"The node that the tag will be removed from.","lua_type":"NodeInstance"},{"name":"TagName","desc":"The tag being removed","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":222,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetTags","desc":"Returns all tags present on the node. Created to manage \\"categories\\".","params":[{"name":"self","desc":"The node that the tags are obtained from.","lua_type":"NodeInstance"}],"returns":[{"desc":"A dictionary containing all tags, alongside the count.","lua_type":"{[string]:any},number"}],"function_type":"static","source":{"line":235,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetChildrenNodes","desc":"Returns all children present on the node.","params":[{"name":"self","desc":"The node that the children are obtained from.","lua_type":"NodeInstance"}],"returns":[{"desc":"An array of all children.","lua_type":"{NodeInstance}"}],"function_type":"static","source":{"line":250,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetChildNodeFromName","desc":"Returns the child node from the node using the provided LinkDesc.","params":[{"name":"self","desc":"The node that the child is obtained from.","lua_type":"NodeInstance"},{"name":"LinkDesc","desc":"The relationship of which the child has to the inputted node.","lua_type":"string"}],"returns":[{"desc":"The child node that has the LinkDesc or nil if it doesn\'t exist.","lua_type":"NodeInstance?"}],"function_type":"static","source":{"line":265,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetChildNodeFromID","desc":"Returns the child node from the node using the provided NodeID.","params":[{"name":"self","desc":"The node that the child is obtained from.","lua_type":"NodeInstance"},{"name":"ChildID","desc":"The ID of the child.","lua_type":"number"}],"returns":[{"desc":"The child node that has the NodeID or nil if it doesn\'t exist.","lua_type":"NodeInstance?"}],"function_type":"static","source":{"line":277,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetParentNodes","desc":"Returns all parents present on the node.","params":[{"name":"self","desc":"The node that the parents are obtained from.","lua_type":"NodeInstance"}],"returns":[{"desc":"An array of all parents.","lua_type":"{NodeInstance}"}],"function_type":"static","source":{"line":294,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetParentNodeFromName","desc":"Returns the parent node from the node using the provided LinkDesc.","params":[{"name":"self","desc":"The node that the parent is obtained from.","lua_type":"NodeInstance"},{"name":"LinkDesc","desc":"The relationship of which the parent has to the inputted node.","lua_type":"string"}],"returns":[{"desc":"The parent node that has the LinkDesc or nil if it doesn\'t exist.","lua_type":"NodeInstance?"}],"function_type":"static","source":{"line":309,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetParentNodeFromID","desc":"Returns the parent node from the node using the provided NodeID.","params":[{"name":"self","desc":"The node that the parent is obtained from.","lua_type":"NodeInstance"},{"name":"ParentID","desc":"The ID of the parent.","lua_type":"number"}],"returns":[{"desc":"The parent node that has the NodeID or nil if it doesn\'t exist.","lua_type":"NodeInstance?"}],"function_type":"static","source":{"line":321,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"AddContent","desc":"Adds a [Bookmark] for the inputted item into the node.","params":[{"name":"self","desc":"The node that the bookmark is stored.","lua_type":"NodeInstance"},{"name":"Content","desc":"The Instance to track within the node.","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Bookmark The [Bookmark] that is tracking the Content."}],"function_type":"static","source":{"line":352,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetContent","desc":"Gets the [Bookmark] for the inputted item from the node.","params":[{"name":"self","desc":"The node that the bookmark is stored.","lua_type":"NodeInstance"},{"name":"Content","desc":"The Instance we want the bookmark of.","lua_type":"any"}],"returns":[{"desc":"The [Bookmark] that is tracking the Content and the Content itself.","lua_type":"Bookmark,Content"}],"function_type":"static","source":{"line":369,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"GetContents","desc":"Gets all of the content tracked by the node.","params":[{"name":"self","desc":"The node that the content is obtained from.","lua_type":"NodeInstance"}],"returns":[{"desc":"An array containing all of the contents tracked by the node.","lua_type":"{Content}"}],"function_type":"static","source":{"line":382,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"RemoveContent","desc":"Removes the bookmark of the content tracked by the node.","params":[{"name":"self","desc":"The node that the content is obtained from.","lua_type":"NodeInstance"},{"name":"Content","desc":"The Instance we want to untrack.","lua_type":"any"}],"returns":[],"function_type":"static","source":{"line":395,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"Link","desc":"Links the inputted node to the TargetNode and labeling the link with the LinkDesc.\\nA link is created on both nodes,\\nwhere the link for the input node is in `Children`\\n,whilst the link for the target node is in `Parents`.","params":[{"name":"self","desc":"The node that we\'re linking from.","lua_type":"NodeInstance"},{"name":"TargetNode","desc":"The node that will be linked to.","lua_type":"NodeInstance"},{"name":"LinkDesc","desc":"The relationship between the two nodes.","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":433,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"Unlink","desc":"Unlinks the inputted node and related TargetNode.\\nThe links on both nodes are deleted.\\nFor the input node, the link is found in `Children`.\\nWhilst for the TargetNode, the link is found in `Parents`.","params":[{"name":"self","desc":"The node that we\'re unlinking from.","lua_type":"NodeInstance"},{"name":"LinkDesc","desc":"The relationship that we\'re unlinking.","lua_type":"string | DisplayName"}],"returns":[],"function_type":"static","source":{"line":466,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"CleanUp","desc":"Untracks all of the children and parents within the node to ensure no false references.","params":[{"name":"self","desc":"The node that we\'re cleaning up.","lua_type":"NodeInstance"}],"returns":[],"function_type":"static","source":{"line":478,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}}],"properties":[],"types":[{"name":"NodeInstance","desc":"","fields":[{"name":"Name","lua_type":"string | number","desc":"The name of the node. It\'s usually a unique NodeID."},{"name":"Tags","lua_type":"Folder","desc":"A folder containing Folders of all tags that the node has."},{"name":"Contents","lua_type":"Folder","desc":"A folder containing [Bookmarks](NodeLib#Bookmark) to items that belong to the node."},{"name":"Parents","lua_type":"Folder","desc":"A folder containing [NodeLinks](NodeLib#NodeLink) to every parent node."},{"name":"Children","lua_type":"Folder","desc":"A folder containing [NodeLinks](NodeLib#NodeLink) to every child node."}],"source":{"line":58,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"TagRef","desc":"A special type of Folder where its name is the name of the Tag it represents.","lua_type":"Folder","source":{"line":63,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"Bookmark","desc":"A special type of ObjectValue to reference the original instance.","lua_type":"ObjectValue","source":{"line":68,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}},{"name":"NodeLink","desc":"A special type of ObjectValue where the name represents the relationship between the node and the value.\\nThe value of this is another NodeInstance.","lua_type":"ObjectValue","source":{"line":74,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}}],"name":"NodeLib","desc":"A library for creating Nodes, of which are used to create Trees. These nodes allow for having multiple parents and children.","source":{"line":5,"path":"src/Script/StardustFramework/Libraries/SearchTree/Node/init.lua"}}')}}]);